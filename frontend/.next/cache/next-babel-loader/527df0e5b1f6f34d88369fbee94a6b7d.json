{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport TodoApp from './TodoApp';\nimport TodoProvider from './TodoContext';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\nexport default function TodoTab() {\n  const {\n    0: status,\n    1: setStatus\n  } = useState('all');\n  return __jsx(TodoProvider, null, __jsx(Button, {\n    onClick: () => setStatus('all'),\n    kind: status === 'all' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    }\n  }, \"All\"), __jsx(Button, {\n    onClick: () => setStatus('done'),\n    kind: status === 'done' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    }\n  }, \"Done\"), __jsx(Button, {\n    onClick: () => setStatus('pending'),\n    kind: status === 'pending' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    }\n  }, \"Pending\"), __jsx(Block, {\n    paddingTop: \"10px\"\n  }, __jsx(TodoApp, {\n    status: status\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}