{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { IoIosArrowBack, IoIosArrowForward, IoIosArrowDropleftCircle, IoIosArrowDroprightCircle } from 'react-icons/io';\nimport { FiHeart, FiShare, FiBookmark, FiMessageCircle, FiMoreHorizontal } from 'react-icons/fi';\nimport { Row, Col } from 'react-flexbox-grid/dist/react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Modal } from 'baseui/modal';\nimport { Button } from 'baseui/button';\nimport { Avatar } from 'baseui/avatar';\nimport Container from '../../components/UiElements/Container/Container';\nimport InstagramCard from '../../components/UiElements/InstagramCard/InstagramCard';\nimport Carousel, { Slide } from '../../components/UiElements/Carousel/Carousel';\nimport useDirection from '../../utils/useDirection';\nimport Comment from './Comment';\nimport Wrapper, { PrevButton, NextButton, ContentWrapper, Media, Image, Video, Content, Header, AvatarWrapper, FollowButton, Name, Dot, Body, CommentWrapper, Footer, SocialList, ListItem, ActivityInfo, NumberOFLike, PostTime, MoreButton } from './Posts.styled';\n\nconst Posts = ({\n  data,\n  avatar,\n  username\n}) => {\n  const {\n    0: postLimit,\n    1: setPostLimit\n  } = useState(9);\n  const {\n    0: currentPost,\n    1: setCurrentPost\n  } = useState(1);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [direction] = useDirection();\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setPostLimit(postLimit + 3);\n    }, 600);\n  };\n\n  const handleModal = id => {\n    setCurrentPost(id);\n    setVisible(true);\n  };\n\n  const handlePrevPost = () => {\n    setCurrentPost(currentPost - 1);\n  };\n\n  const handleNextPost = () => {\n    setCurrentPost(currentPost + 1);\n  };\n\n  const renderHtml = data => {\n    return {\n      __html: data\n    };\n  };\n\n  let newData;\n  data.forEach(item => {\n    if (parseInt(item.id) === currentPost) {\n      newData = item;\n    }\n  });\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Row, null, data.slice(0, postLimit).map(post => __jsx(Col, {\n    sm: 6,\n    md: 4,\n    key: `post-key${post.id}`\n  }, __jsx(InstagramCard, {\n    style: {\n      marginBottom: '20px'\n    },\n    type: post.type,\n    image: post.image,\n    numberOflike: post.numberOflike && post.numberOflike,\n    numberOfView: post.numberOfView && post.numberOfView,\n    numberOfcomment: post.numberOfcomment,\n    onClick: () => handleModal(parseInt(post.id))\n  })))), __jsx(Block, {\n    paddingTop: ['10px', '10px', '20px'],\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, data.length > postLimit ? __jsx(Button, {\n    isLoading: loading,\n    onClick: handleLoadMore,\n    kind: \"secondary\",\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            height: '48px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Check \", data.length - postLimit, \" more posts\") : 'No more post'), __jsx(Modal, {\n    onClose: () => {\n      setVisible(false);\n    },\n    closeable: true,\n    isOpen: visible,\n    animate: true,\n    size: \"default\",\n    role: \"dialog\",\n    unstable_ModalBackdropScroll: true,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            zIndex: 9999\n          };\n        }\n      },\n      Close: {\n        style: () => {\n          return {\n            display: 'none'\n          };\n        }\n      },\n      Dialog: {\n        style: () => {\n          return {\n            width: '100%',\n            maxWidth: '815px',\n            '@media only screen and (max-width: 1135px)': {\n              maxWidth: '480px'\n            },\n            '@media only screen and (max-width: 570px)': {\n              maxWidth: '380px'\n            }\n          };\n        }\n      }\n    }\n  }, currentPost > 1 && __jsx(PrevButton, {\n    onClick: handlePrevPost\n  }, __jsx(IoIosArrowBack, null)), currentPost < data.length && __jsx(NextButton, {\n    onClick: handleNextPost\n  }, __jsx(IoIosArrowForward, null)), __jsx(ContentWrapper, null, __jsx(Media, null, newData.type === 'image' && __jsx(Image, {\n    src: newData.image,\n    alt: \"Thumbnail\"\n  }), newData.type === 'video' && __jsx(Video, {\n    className: \"video-container\",\n    dangerouslySetInnerHTML: renderHtml(newData.video)\n  }), newData.type === 'gallery' && __jsx(Carousel, {\n    bullets: true,\n    options: {\n      direction\n    },\n    numberOfBullets: newData.gallery.length,\n    carouselSelector: \"gallery\",\n    prevButton: __jsx(IoIosArrowDropleftCircle, null),\n    nextButton: __jsx(IoIosArrowDroprightCircle, null)\n  }, newData.gallery.map((item, index) => __jsx(Slide, {\n    key: `gallery-key${index}`\n  }, __jsx(\"img\", {\n    src: item,\n    alt: 'post'\n  }))))), __jsx(Content, null, __jsx(Header, null, __jsx(AvatarWrapper, null, __jsx(Avatar, {\n    name: username,\n    size: \"scale1000\",\n    src: avatar\n  }), __jsx(Name, null, username), __jsx(Dot, null, \"\\u2022\"), __jsx(FollowButton, null, \"Follow\")), __jsx(MoreButton, null, __jsx(FiMoreHorizontal, null))), __jsx(Body, null, __jsx(CommentWrapper, null, newData.comments !== undefined && newData.comments.length > 0 ? newData.comments.map(item => __jsx(Comment, {\n    key: `comment-key${item.id}`,\n    role: item.role,\n    avatar: item.avatar,\n    name: item.username,\n    content: item.comment,\n    handleLike: () => console.log('Write like function for post.', newData.id),\n    handleReply: () => console.log('Write reply function for post.', newData.id)\n  })) : '')), __jsx(Footer, null, __jsx(SocialList, null, __jsx(ListItem, null, __jsx(FiHeart, null)), __jsx(ListItem, null, __jsx(FiMessageCircle, null)), __jsx(ListItem, null, __jsx(FiShare, null)), __jsx(ListItem, null, __jsx(FiBookmark, null))), __jsx(ActivityInfo, null, __jsx(NumberOFLike, null, newData.numberOflike, \" likes\"), __jsx(PostTime, null, \"AUGUST 31\"))))))));\n};\n\nexport default Posts;","map":null,"metadata":{},"sourceType":"module"}