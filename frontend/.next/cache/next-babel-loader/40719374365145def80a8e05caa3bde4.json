{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { useQuery, gql } from '@apollo/client';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Container from 'components/UiElements/Container/Container';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport ProductCard from 'components/UiElements/ProductCard/ProductCard';\nimport { withApollo } from '../../apollo/client';\nconst GET_PRODUCTS = gql`\n\tquery getProducts($limit: Int, $offset: Int) {\n\t\tproducts(limit: $limit, offset: $offset) {\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tslug\n\t\t\t\tprice\n\t\t\t\tthumbnail\n\t\t\t}\n\t\t\ttotal\n\t\t\thasMore\n\t\t}\n\t}\n`;\nconst TITLE = 'Shopping Store';\nconst SUB_TITLE = 'Awesome GitHub T-shirts and other cool swag';\n\nconst Shop = () => {\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(GET_PRODUCTS, {\n    notifyOnNetworkStatusChange: true\n  });\n\n  if (error) {\n    return __jsx(\"div\", null, \"Error! \", error.message);\n  }\n\n  if (!data) return null;\n  const {\n    items,\n    total\n  } = data.products;\n\n  function loadMore() {\n    fetchMore({\n      variables: {\n        offset: data.products.items.length\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Shop \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst shop page\"\n  })), __jsx(PageTitle, {\n    title: TITLE,\n    subtitle: SUB_TITLE\n  }), __jsx(Container, null, __jsx(Block, {\n    paddingBottom: \"20px\"\n  }, __jsx(\"img\", {\n    src: require('../../assets/images/shop-banner.png'),\n    width: \"100%\",\n    alt: \"Banner\"\n  })), __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 16,\n    gridMargins: 0\n  }, items.map(item => __jsx(Cell, {\n    span: [12, 4, 4],\n    key: `product-key${item.id}`\n  }, __jsx(ProductCard, {\n    href: `/shop/[slug]`,\n    as: `/shop/${item.slug}`,\n    thumb: item.thumbnail,\n    title: item.name,\n    price: item.price\n  })))), __jsx(Block, {\n    paddingTop: ['30px', '30px', '40px', '50px'],\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, total > items.length ? __jsx(Button, {\n    isLoading: loading,\n    onClick: loadMore,\n    kind: \"secondary\",\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            height: '48px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Load more \", total - items.length, \" products\") : 'No more product')));\n};\n\nexport default withApollo(Shop);","map":null,"metadata":{},"sourceType":"module"}