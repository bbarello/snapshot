{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { StyledTableWrapper, StyledTableHead, StyledTableBodyCell } from 'components/PageStyles/Apps.styled';\nimport { FiPlus, FiTrash2 } from 'react-icons/fi';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { Input } from 'baseui/input';\n\nfunction InvoiceItemRow({\n  item: {\n    id,\n    name,\n    unitPrice,\n    unit\n  },\n  onChange,\n  onRemove\n}) {\n  return __jsx(React.Fragment, null, __jsx(StyledTableBodyCell, null, id), __jsx(StyledTableBodyCell, null, __jsx(Input, {\n    placeholder: \"Enter Name\",\n    name: \"name\",\n    onChange: onChange,\n    value: name,\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })), __jsx(StyledTableBodyCell, null, __jsx(Input, {\n    type: \"number\",\n    name: \"unitPrice\",\n    onChange: onChange,\n    value: unitPrice,\n    placeholder: \"Enter Price\",\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            width: '110px',\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })), __jsx(StyledTableBodyCell, null, __jsx(Input, {\n    type: \"number\",\n    name: \"unit\",\n    onChange: onChange,\n    value: unit,\n    placeholder: \"Enter Unit\",\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            width: '110px',\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })), __jsx(StyledTableBodyCell, null, unitPrice * unit), __jsx(StyledTableBodyCell, {\n    onClick: onRemove,\n    $isCursor: true,\n    $isCenter: true\n  }, __jsx(FiTrash2, {\n    size: \"16px\"\n  })));\n}\n\nfunction calcLineItemsTotal(lineItems) {\n  return lineItems.reduce((prev, cur) => prev + cur.unit * cur.unitPrice, 0);\n}\n\nexport default function InvoiceItemTable({\n  items,\n  onAddItem,\n  onItemInputChange,\n  onRemove\n}) {\n  if (!items) return null;\n  const totalPrice = calcLineItemsTotal(items);\n  return __jsx(React.Fragment, null, __jsx(Block, {\n    marginTop: \"25px\"\n  }, __jsx(StyledTableWrapper, {\n    $gridTemplateColumns: \"auto auto auto auto auto auto\"\n  }, __jsx(StyledTableHead, null, \"S Number\"), __jsx(StyledTableHead, null, \"Item Name\"), __jsx(StyledTableHead, null, \"Unit Costs\"), __jsx(StyledTableHead, null, \"Unit\"), __jsx(StyledTableHead, null, \"Price\"), __jsx(StyledTableHead, null, \"Remove\"), items.map((item, idx) => __jsx(InvoiceItemRow, {\n    key: idx,\n    item: item,\n    onChange: onItemInputChange(idx),\n    onRemove: onRemove(idx)\n  })))), __jsx(Block, {\n    marginTop: \"15px\",\n    overrides: {\n      Block: {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }\n      }\n    }\n  }, __jsx(Button, {\n    kind: \"tertiary\",\n    onClick: onAddItem,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    }\n  }, __jsx(FiPlus, {\n    size: \"1rem\"\n  }), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          padding: '0 5px'\n        }\n      }\n    }\n  }, \"Add Item\")), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"$\", totalPrice, \" Total\")));\n}","map":null,"metadata":{},"sourceType":"module"}