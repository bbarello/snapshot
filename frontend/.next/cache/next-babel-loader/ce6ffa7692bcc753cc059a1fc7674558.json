{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { FaComments } from 'react-icons/fa';\nimport { AiFillCaretUp } from 'react-icons/ai';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Loader from 'components/UiElements/Loader/Loader';\nimport Container from 'components/UiElements/Container/Container';\nimport ListGridCard from 'components/UiElements/ListGridCard/ListGridCard';\nimport AppsMenu from 'components/SideMenu/AppsMenu';\nimport { withApollo } from 'apollo/producthunt.client';\nimport { useQuery, gql } from '@apollo/client';\nconst getProducthuntItems = gql`\n\tquery {\n\t\tposts(first: 10) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\t# description\n\t\t\t\t\ttagline\n\t\t\t\t\tthumbnail {\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t\tcommentsCount\n\t\t\t\t\twebsite\n\t\t\t\t\tvotesCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nconst TITLE = 'Today';\nconst SUB_TITLE = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod';\n\nconst ProductHunt = () => {\n  var _data$posts;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(getProducthuntItems); //TODO add comments ICON and implement loading and error\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, TITLE), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst product hunt app\"\n  })), __jsx(Container, null, __jsx(Block, {\n    paddingTop: ['0', '0', '0', '40px']\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 0,\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 12, 3]\n  }, __jsx(AppsMenu, null)), __jsx(Cell, {\n    span: [12, 12, 9]\n  }, __jsx(Block, {\n    paddingTop: ['10px', '15px', '30px', '0'],\n    paddingBottom: \"30px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            borderBottom: `1px solid ${$theme.colors.backgroundTertiary}`\n          };\n        }\n      }\n    }\n  }, __jsx(Block, {\n    as: \"h3\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font450), {}, {\n            color: $theme.colors.primary,\n            marginBottom: '10px'\n          });\n        }\n      }\n    }\n  }, TITLE), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font200), {}, {\n            color: $theme.colors.contentSecondary\n          });\n        }\n      }\n    }\n  }, SUB_TITLE)), !loading ? __jsx(React.Fragment, null, data === null || data === void 0 ? void 0 : (_data$posts = data.posts) === null || _data$posts === void 0 ? void 0 : _data$posts.edges.map(({\n    node: app\n  }) => {\n    var _app$thumbnail;\n\n    return __jsx(Block, {\n      key: `app-key${app.id}`,\n      overrides: {\n        Block: {\n          style: ({\n            $theme\n          }) => {\n            return {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              paddingTop: '23px',\n              paddingBottom: '20px',\n              borderBottom: `1px solid ${$theme.colors.backgroundTertiary}`\n            };\n          }\n        }\n      }\n    }, __jsx(ListGridCard, {\n      thumb: app === null || app === void 0 ? void 0 : (_app$thumbnail = app.thumbnail) === null || _app$thumbnail === void 0 ? void 0 : _app$thumbnail.url,\n      thumbWidth: '54px',\n      title: app.name,\n      description: app.tagline,\n      websiteUrl: app.website,\n      btn: __jsx(Button, {\n        onClick: () => alert('click'),\n        size: \"compact\",\n        shape: \"pill\",\n        kind: \"secondary\",\n        overrides: {\n          BaseButton: {\n            style: ({\n              $theme\n            }) => {\n              return _objectSpread(_objectSpread({}, $theme.typography.font150), {}, {\n                marginTop: $theme.sizing.scale500,\n                minWidth: '56px'\n              });\n            }\n          }\n        }\n      }, __jsx(FaComments, null), \"\\xA0\", app.commentsCount),\n      style: {\n        alignItems: 'flex-start'\n      }\n    }), __jsx(Button, {\n      kind: \"secondary\",\n      overrides: {\n        BaseButton: {\n          style: ({\n            $theme\n          }) => {\n            return _objectSpread({\n              minWidth: '80px',\n              justifyContent: 'space-around'\n            }, $theme.typography.font250);\n          }\n        }\n      }\n    }, __jsx(AiFillCaretUp, null), \" \", app === null || app === void 0 ? void 0 : app.votesCount));\n  })) : __jsx(Loader, null))))));\n};\n\nexport default withApollo(ProductHunt);","map":null,"metadata":{},"sourceType":"module"}