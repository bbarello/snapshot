{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { Block } from 'baseui/block';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { useForm } from 'react-hook-form';\nimport Container from 'components/UiElements/Container/Container';\nimport SettingsMenu from 'components/SideMenu/SettingsMenu';\nimport { ButtonGroup } from 'components/PageStyles/Settings.styled';\n\nvar Password = function Password() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      feedback = _useState[0],\n      setFeedback = _useState[1];\n\n  var _useState2 = useState({\n    newPassword: '',\n    confirmPassword: ''\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleOnChange = function handleOnChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleOnSubmit = handleSubmit(function (data) {\n    if (state.newPassword === state.confirmPassword) {\n      setFeedback(false);\n      console.log('Form data: ', data);\n      alert(JSON.stringify(data, null, 4));\n    } else {\n      setFeedback(true);\n    }\n  });\n\n  var handleOnReset = function handleOnReset() {\n    setState({\n      newPassword: '',\n      confirmPassword: ''\n    });\n    reset();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Password \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst password setting page\"\n  })), __jsx(Container, null, __jsx(Block, {\n    paddingTop: ['0', '0', '0', '40px']\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 0,\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 12, 3]\n  }, __jsx(SettingsMenu, null)), __jsx(Cell, {\n    span: [12, 12, 9]\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', '20px', '0']\n  }, __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(Block, {\n    marginBottom: \"30px\"\n  }, __jsx(FormControl, {\n    label: \"Set New Password\",\n    caption: \"Please use 20 characters at maximum\",\n    overrides: {\n      Label: {\n        style: function style(_ref) {\n          var $theme = _ref.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"newPassword\",\n    value: state.newPassword,\n    onChange: handleOnChange,\n    inputRef: register({\n      required: true,\n      maxLength: 20\n    }),\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  }))), __jsx(Block, {\n    marginBottom: \"30px\"\n  }, __jsx(FormControl, {\n    label: \"Confirm Password\",\n    caption: \"Please enter same password\",\n    error: feedback && 'Password is not matching',\n    overrides: {\n      Label: {\n        style: function style(_ref2) {\n          var $theme = _ref2.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: state.confirmPassword,\n    onChange: handleOnChange,\n    inputRef: register({\n      required: true,\n      maxLength: 20\n    }),\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  }))), __jsx(ButtonGroup, null, __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: function style(_ref3) {\n          var $theme = _ref3.$theme;\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Change\"), __jsx(Button, {\n    type: \"reset\",\n    kind: \"tertiary\",\n    size: \"large\",\n    onClick: handleOnReset,\n    overrides: {\n      BaseButton: {\n        style: function style(_ref4) {\n          var $theme = _ref4.$theme;\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Cancel\")))))))));\n};\n\nexport default Password;","map":null,"metadata":{},"sourceType":"module"}