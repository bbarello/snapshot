{"ast":null,"code":"/**\n|--------------------------------------------------\n| Badge API \n|--------------------------------------------------\n*/\nexport var badgePropsData = [\n  /** \n  {\n    property: '{logo}',\n    description:'{first_name} {last_name}',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'count',\n    description: 'set the count number of badge',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the text color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'bgColor',\n    description: 'set the background-color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'path',\n    description: 'if you want add link to badge',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'set the handler to handle click event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n/**\n|--------------------------------------------------\n| Carousel API \n|--------------------------------------------------\n*/\n\nexport var carouselPropsData = [\n  /** \n  {\n    property: 'className',\n    description: 'set the className of carousel',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'children',\n    description: 'add Slide component or any other React component',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'carouselSelector',\n    description: 'add a unique string for carousel id',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'options',\n    description:\n      'we use glide carousel. Here is the <a href=\"https://glidejs.com/docs/options/\">carousel options</a>.',\n    type: 'Object',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'controls',\n    description: 'if you want to show and hide previous and next button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'bullets',\n    description:\n      \"if you want to show and hide carousel bullet. It's requried numberOfBullets prop\",\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfBullets',\n    description: 'it should be a number which is equal to your Slide items',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbs',\n    description: 'it should be an array that contain Slide images',\n    type: 'Array',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'prevButton',\n    description: 'add previous icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'nextButton',\n    description: 'add next icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },**/\n];\n/** \n|--------------------------------------------------\n| CartProduct API \n|--------------------------------------------------\n**/\n\nexport var cartProductPropsData = [\n  /** \n  {\n    property: 'thumbUrl',\n    description:\n      'set the image of CartProduct, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the title of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'quantity',\n    description: 'set the quantity of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set the price of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the color of product',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'hideBorderBottom',\n    description: 'show/hide border bottom of the CartProduct',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'removable',\n    description: 'show/hide the remove button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description:\n      'first you need to set removable pron then set the handler to handle click event for remove',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n/** \n|--------------------------------------------------\n| InstagramCard API \n|--------------------------------------------------\n**/\n\nexport var instagramCardPropsData = [\n  /** \n  {\n    property: 'type',\n    description: 'set the card type, it should be default | gallery | video',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'image',\n    description:\n      'set the card image, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfView',\n    description: 'it will show if type is video',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOflike',\n    description: 'it will only show for gallery and post type',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfcomment',\n    description: 'show number of comments on the post',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n/** \n|--------------------------------------------------\n| ProductCard API \n|--------------------------------------------------\n**/\n\nexport var productCardPropsData = [\n  /** \n  {\n    property: 'href',\n    description: 'set the link to navigate single product page.',\n    type: 'any',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'as',\n    description:\n      'if you are use dynamic route then use this prop, for more details check <a target=\"_blank\" href=\"https://nextjs.org/docs#with-link\">this</a> doc',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'alignItem',\n    description: \"it's control text-align\",\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumb',\n    description: 'set product image',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the product title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },**/\n];\n/** \n|--------------------------------------------------\n| PricingCard API \n|--------------------------------------------------\n**/\n\nexport var pricingCardPropsData = [\n  /** \n  {\n    property: 'type',\n    description:\n      'set the pricing plan type, it should be Free | Primary | Advance',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the PricingCard title',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'items',\n    description: 'set your features / services',\n    type: 'ArrayOfObject',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set pricing card button text',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'isLoading',\n    description: 'configure loading stage for button',\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },**/\n];\n/**\n|--------------------------------------------------\n| ListGridCard API \n|--------------------------------------------------\n*/\n\nexport var listGridCardPropsData = [\n  /** \n  {\n    property: 'variant',\n    description: 'set variant to get list | grid view card',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'thumb',\n    description: 'set the thumbnail image for card',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbWidth',\n    description: 'customize thumbnail image width using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbHeight',\n    description: 'customize thumbnail image height using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the card title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'description',\n    description: 'set the card description',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'author',\n    description: 'set the author name',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'authorUrl',\n    description: 'set the author profile link',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set your card button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'set custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n/**\n|--------------------------------------------------\n| PageTitle API \n|--------------------------------------------------\n*/\n\nexport var pageTitlePropsData = [{\n  property: 'title',\n  description: 'set the title',\n  type: 'String',\n  \"default\": '-',\n  version: '1.0'\n}, {\n  property: 'subtitle',\n  description: 'set the subtitle',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'bgColor',\n  description: 'set the background-color',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'backdrop',\n  description: 'show/hide backdrop',\n  type: 'Boolean',\n  \"default\": '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| Sites API \n|--------------------------------------------------\n*/\n\nexport var widgetCardPropsData = [{\n  //property: 'icon',\n  description: 'set the card icon',\n  type: 'React.ReactNode',\n  \"default\": '-',\n  version: '1.0'\n}, {\n  description: 'add your widget title',\n  property: 'title',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'description',\n  description: 'set the description of your widget card',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'btntext',\n  description: 'add button text, for example View report',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'label',\n  description: 'add card label, for example Total orders',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'color',\n  description: 'set icon bg and button text color',\n  type: 'String',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'set custom style',\n  type: 'React.CSSProperties',\n  \"default\": '-',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'if you want to handle any event',\n  type: '(event) => void',\n  \"default\": '-',\n  version: ''\n}];","map":{"version":3,"sources":["/Users/bryanbarello/snapshot/frontend/data/uiElementsApiData.js"],"names":["badgePropsData","carouselPropsData","cartProductPropsData","instagramCardPropsData","productCardPropsData","pricingCardPropsData","listGridCardPropsData","pageTitlePropsData","property","description","type","version","widgetCardPropsData"],"mappings":"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","sourcesContent":["/**\n|--------------------------------------------------\n| Badge API \n|--------------------------------------------------\n*/\nexport const badgePropsData = [\n  /** \n  {\n    property: '{logo}',\n    description:'{first_name} {last_name}',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'count',\n    description: 'set the count number of badge',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the text color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'bgColor',\n    description: 'set the background-color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'path',\n    description: 'if you want add link to badge',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'set the handler to handle click event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/**\n|--------------------------------------------------\n| Carousel API \n|--------------------------------------------------\n*/\nexport const carouselPropsData = [\n  /** \n  {\n    property: 'className',\n    description: 'set the className of carousel',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'children',\n    description: 'add Slide component or any other React component',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'carouselSelector',\n    description: 'add a unique string for carousel id',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'options',\n    description:\n      'we use glide carousel. Here is the <a href=\"https://glidejs.com/docs/options/\">carousel options</a>.',\n    type: 'Object',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'controls',\n    description: 'if you want to show and hide previous and next button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'bullets',\n    description:\n      \"if you want to show and hide carousel bullet. It's requried numberOfBullets prop\",\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfBullets',\n    description: 'it should be a number which is equal to your Slide items',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbs',\n    description: 'it should be an array that contain Slide images',\n    type: 'Array',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'prevButton',\n    description: 'add previous icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'nextButton',\n    description: 'add next icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/** \n|--------------------------------------------------\n| CartProduct API \n|--------------------------------------------------\n**/\nexport const cartProductPropsData = [\n  /** \n  {\n    property: 'thumbUrl',\n    description:\n      'set the image of CartProduct, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the title of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'quantity',\n    description: 'set the quantity of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set the price of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the color of product',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'hideBorderBottom',\n    description: 'show/hide border bottom of the CartProduct',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'removable',\n    description: 'show/hide the remove button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description:\n      'first you need to set removable pron then set the handler to handle click event for remove',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/** \n|--------------------------------------------------\n| InstagramCard API \n|--------------------------------------------------\n**/\nexport const instagramCardPropsData = [\n  /** \n  {\n    property: 'type',\n    description: 'set the card type, it should be default | gallery | video',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'image',\n    description:\n      'set the card image, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfView',\n    description: 'it will show if type is video',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOflike',\n    description: 'it will only show for gallery and post type',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfcomment',\n    description: 'show number of comments on the post',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/** \n|--------------------------------------------------\n| ProductCard API \n|--------------------------------------------------\n**/\nexport const productCardPropsData = [\n  /** \n  {\n    property: 'href',\n    description: 'set the link to navigate single product page.',\n    type: 'any',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'as',\n    description:\n      'if you are use dynamic route then use this prop, for more details check <a target=\"_blank\" href=\"https://nextjs.org/docs#with-link\">this</a> doc',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'alignItem',\n    description: \"it's control text-align\",\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumb',\n    description: 'set product image',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the product title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/** \n|--------------------------------------------------\n| PricingCard API \n|--------------------------------------------------\n**/\nexport const pricingCardPropsData = [\n  /** \n  {\n    property: 'type',\n    description:\n      'set the pricing plan type, it should be Free | Primary | Advance',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the PricingCard title',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'items',\n    description: 'set your features / services',\n    type: 'ArrayOfObject',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set pricing card button text',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'isLoading',\n    description: 'configure loading stage for button',\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/**\n|--------------------------------------------------\n| ListGridCard API \n|--------------------------------------------------\n*/\nexport const listGridCardPropsData = [\n  /** \n  {\n    property: 'variant',\n    description: 'set variant to get list | grid view card',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'thumb',\n    description: 'set the thumbnail image for card',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbWidth',\n    description: 'customize thumbnail image width using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbHeight',\n    description: 'customize thumbnail image height using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the card title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'description',\n    description: 'set the card description',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'author',\n    description: 'set the author name',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'authorUrl',\n    description: 'set the author profile link',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set your card button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'set custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },**/\n];\n\n/**\n|--------------------------------------------------\n| PageTitle API \n|--------------------------------------------------\n*/\nexport const pageTitlePropsData = [\n  {\n    property: 'title',\n    description: 'set the title',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'subtitle',\n    description: 'set the subtitle',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'bgColor',\n    description: 'set the background-color',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'backdrop',\n    description: 'show/hide backdrop',\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| Sites API \n|--------------------------------------------------\n*/\nexport const widgetCardPropsData = [\n  {\n    //property: 'icon',\n    description: 'set the card icon',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    description: 'add your widget title',\n    property: 'title',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'description',\n    description: 'set the description of your widget card',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btntext',\n    description: 'add button text, for example View report',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'label',\n    description: 'add card label, for example Total orders',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set icon bg and button text color',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'set custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n];\n"]},"metadata":{},"sourceType":"module"}