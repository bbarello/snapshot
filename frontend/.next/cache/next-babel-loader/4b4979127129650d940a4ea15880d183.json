{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Tag } from 'baseui/tag';\nimport { Button } from 'baseui/button';\nimport { FiCheck } from 'react-icons/fi';\nimport CardWrapper, { CardHeader, Title, Tags, CardBody, ListItemLabel, CardFooter, Price, PlanText } from './PricingCard.styled';\n\nconst PricingCard = ({\n  title,\n  type,\n  items,\n  price,\n  btn,\n  isLoading,\n  onClick\n}) => {\n  const planType = type.toLowerCase();\n  let tag;\n\n  switch (planType) {\n    case 'primary':\n      tag = __jsx(Tag, {\n        closeable: false,\n        kind: \"positive\",\n        variant: \"solid\",\n        overrides: {\n          Root: {\n            style: () => {\n              return {\n                marginLeft: 0\n              };\n            }\n          }\n        }\n      }, type);\n      break;\n\n    case 'advance':\n      tag = __jsx(Tag, {\n        closeable: false,\n        kind: \"accent\",\n        variant: \"solid\",\n        overrides: {\n          Root: {\n            style: () => {\n              return {\n                marginLeft: 0\n              };\n            }\n          }\n        }\n      }, type);\n      break;\n\n    default:\n      tag = __jsx(Tag, {\n        closeable: false,\n        kind: 'accent',\n        overrides: {\n          Root: {\n            style: () => {\n              return {\n                marginLeft: 0\n              };\n            }\n          }\n        }\n      }, type);\n      break;\n  }\n\n  return __jsx(CardWrapper, null, __jsx(CardHeader, null, __jsx(Title, null, title), __jsx(Tags, null, tag)), __jsx(CardBody, null, items && items.map(item => __jsx(ListItemLabel, {\n    key: `price-card--key${item.id}`\n  }, __jsx(FiCheck, null), \"\\xA0 \", item.title))), __jsx(CardFooter, null, __jsx(Price, null, price, planType !== 'free' && __jsx(PlanText, null, \" / mo\")), __jsx(Button, {\n    size: \"large\",\n    onClick: onClick,\n    isLoading: isLoading,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            width: '100%',\n            height: '48px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, btn)));\n};\n\nexport default PricingCard;","map":null,"metadata":{},"sourceType":"module"}