{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, Fragment } from 'react';\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { FiPlus, FiCheck } from 'react-icons/fi';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { StyledTableHeadAlt } from 'components/PageStyles/Apps.styled';\nimport UiElementsMenu from 'components/SideMenu/UiElementsMenu';\nimport Container from 'components/UiElements/Container/Container';\nimport ListGrid from 'components/UiElements/ListGridCard/ListGridCard';\nimport { listGridCardPropsData } from '../../data/uiElementsApiData';\n\nconst ListGridCard = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: installed,\n    1: setInstalled\n  } = useState(false);\n\n  const handleInstall = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setInstalled(!installed);\n      setLoading(false);\n    }, 600);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Snapshot\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst calendar app\"\n  })), __jsx(Container, null, __jsx(Block, {\n    paddingTop: ['0', '0', '0', '40px']\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 0,\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 12, 3]\n  }, __jsx(UiElementsMenu, null)), __jsx(Cell, {\n    span: [12, 12, 9]\n  }, __jsx(Block, {\n    paddingTop: ['10px', '15px', '30px', '0']\n  }, __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"20px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font650), {}, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    }\n  }), __jsx(Block, {\n    paddingBottom: \"30px\",\n    marginLeft: \"-15px\",\n    marginRight: \"-15px\"\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 30,\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 6, 5]\n  }, __jsx(Block, {\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            color: $theme.colors.primaryA\n          };\n        }\n      }\n    }\n  }), __jsx(ListGrid, {\n    style: {\n      padding: '20px 25px 22px',\n      boxShadow: '0 1px 4px hsla(0, 0%, 0%, 0.16)',\n      marginTop: '20px'\n    },\n    variant: \"grid\",\n    thumb: require('../../assets/images/applications/apps/1.svg'),\n    thumbHeight: \"60px\",\n    title: \"Slack\",\n    description: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\",\n    btn: __jsx(Button, {\n      kind: \"secondary\",\n      size: \"compact\",\n      shape: \"pill\",\n      isLoading: loading,\n      onClick: handleInstall,\n      overrides: {\n        BaseButton: {\n          style: () => {\n            return {\n              fontSize: '14px',\n              paddingLeft: '14px',\n              paddingRight: '14px',\n              color: installed ? '#36AF00' : '#000000'\n            };\n          }\n        }\n      }\n    }, installed ? __jsx(React.Fragment, null, __jsx(FiCheck, null), \"\\xA0Installed\") : __jsx(React.Fragment, null, __jsx(FiPlus, null), \"\\xA0Add\"))\n  })), __jsx(Cell, {\n    span: [12, 6, 7]\n  }, __jsx(Block, {\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            color: $theme.colors.primaryA,\n            paddingBottom: '20px'\n          };\n        }\n      }\n    }\n  }), __jsx(ListGrid, {\n    variant: \"list\",\n    thumb: require('../../assets/images/applications/apps/1.svg'),\n    thumbHeight: \"60px\",\n    title: \"Slack\",\n    description: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\",\n    author: \"RedQ\",\n    authorUrl: \"https://redq.io/\"\n  })))), __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"10px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font650), {}, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    }\n  }), __jsx(Block, {\n    as: \"p\",\n    paddingBottom: \"30px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font200), {}, {\n            color: $theme.colors.borderInverseOpaque\n          });\n        }\n      }\n    }\n  }), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          minHeight: '150px'\n        }\n      }\n    }\n  }, __jsx(StyledTable, {\n    $gridTemplateColumns: \"150px 250px auto auto auto\"\n  }, __jsx(StyledTableHeadAlt, null, \"Property\"), __jsx(StyledTableHeadAlt, null, \"Description\"), __jsx(StyledTableHeadAlt, null, \"Type\"), __jsx(StyledTableHeadAlt, null, \"Default\"), __jsx(StyledTableHeadAlt, null, \"Version\"), listGridCardPropsData.map((item, index) => {\n    const striped = index % 2 === 0;\n    return __jsx(Fragment, {\n      key: index\n    }, __jsx(StyledBodyCell, {\n      $striped: striped\n    }, item.property), __jsx(StyledBodyCell, {\n      $striped: striped,\n      dangerouslySetInnerHTML: {\n        __html: item.description\n      }\n    }), __jsx(StyledBodyCell, {\n      $striped: striped\n    }, __jsx(\"code\", null, item.type)), __jsx(StyledBodyCell, {\n      $striped: striped\n    }, item.default), __jsx(StyledBodyCell, {\n      $striped: striped\n    }, item.version && item.version));\n  })))))))));\n};\n\nexport default ListGridCard;","map":null,"metadata":{},"sourceType":"module"}