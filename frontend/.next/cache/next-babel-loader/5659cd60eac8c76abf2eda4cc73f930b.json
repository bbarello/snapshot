{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\n\n/**\n * fake Todo data generator\n */\nconst initial = Array.from({\n  length: 5\n}, (v, k) => k).map(k => {\n  const custom = {\n    id: `id-${k}`,\n    content: `Make a short list for invision`,\n    status: 'pending' // \"done\" or \"pending\"\n\n  };\n  return custom;\n});\nexport const TodoContext = React.createContext({});\n\nconst TodoProvider = props => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState(initial);\n\n  const addTodo = value => {\n    const newTodo = {\n      id: `id-${Date.now()}`,\n      content: `${value}`,\n      status: 'pending'\n    };\n    todos.push(newTodo);\n    setTodos([...todos]); // have to use this way [...todos]\n  };\n\n  const updateTodo = todoItem => {\n    const index = todos.findIndex(todo => todo.id === todoItem.id);\n    todos[index] = todoItem;\n    setTodos([...todos]);\n  };\n\n  const removeTodo = todoId => {\n    const index = todos.findIndex(todo => todo.id === todoId);\n    todos.splice(index, 1);\n    setTodos([...todos]);\n  };\n\n  return __jsx(TodoContext.Provider, {\n    value: {\n      todos,\n      setTodos,\n      addTodo,\n      updateTodo,\n      removeTodo\n    }\n  }, props.children);\n};\n\nexport default TodoProvider;","map":null,"metadata":{},"sourceType":"module"}