{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    integration {\\n      id\\n      title\\n      shortDescription\\n      banner\\n\\n      apps {\\n        id\\n        type\\n        image\\n        isInstalled\\n        description\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport Fade from 'react-reveal/Fade';\nimport { FiPlus, FiCheck } from 'react-icons/fi';\nimport { Row, Col } from 'react-flexbox-grid/dist/react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Container from 'components/UiElements/Container/Container';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport Carousel, { Slide } from 'components/UiElements/Carousel/Carousel';\nimport ListGridCard from 'components/UiElements/ListGridCard/ListGridCard';\nimport IntegrationsMenu from 'components/SideMenu/IntegrationsMenu';\nimport useDirection from 'utils/useDirection';\nimport { useQuery, gql } from '@apollo/client';\nimport { withApollo } from 'apollo/client';\nvar GET_INTEGRATIONS = gql(_templateObject());\n\nfunction Integrations(_ref) {\n  var data = _ref.data,\n      loading = _ref.loading;\n\n  var _useState = useState(data),\n      visibleApps = _useState[0],\n      setApps = _useState[1];\n\n  var _useState2 = useState(''),\n      install = _useState2[0],\n      setInstall = _useState2[1];\n\n  function onFilter(selectedItem) {\n    if (selectedItem !== 'all') {\n      var items = data.filter(function (item) {\n        return item.type.includes(selectedItem);\n      });\n      setApps(items);\n    } else {\n      setApps(data);\n    }\n  }\n\n  return __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px']\n  }, __jsx(Row, null, __jsx(Col, {\n    lg: 3\n  }, __jsx(IntegrationsMenu, {\n    onClick: onFilter\n  })), __jsx(Col, {\n    lg: 9\n  }, __jsx(Row, null, visibleApps.map(function (item) {\n    return __jsx(Col, {\n      md: 6,\n      xl: 4,\n      key: \"integration-app--key\".concat(item.id)\n    }, __jsx(Fade, null, __jsx(ListGridCard, {\n      style: {\n        padding: '20px 25px 22px',\n        boxShadow: '0 1px 4px hsla(0, 0%, 0%, 0.16)',\n        marginTop: '20px'\n      },\n      variant: \"grid\",\n      thumb: item.image,\n      thumbHeight: \"60px\",\n      title: item.title,\n      description: item.description,\n      btn: __jsx(Button, {\n        kind: \"secondary\",\n        size: \"compact\",\n        shape: \"pill\",\n        isLoading: item.id === install && loading // onClick={() => handleAppInstallation(item.id)}\n        ,\n        overrides: {\n          BaseButton: {\n            style: function style() {\n              return {\n                fontSize: '14px',\n                paddingLeft: '14px',\n                paddingRight: '14px',\n                color: item.isInstalled ? '#36AF00' : '#000000'\n              };\n            }\n          }\n        }\n      }, item.isInstalled ? __jsx(React.Fragment, null, __jsx(FiCheck, null), \"\\xA0Installed\") : __jsx(React.Fragment, null, __jsx(FiPlus, null), \"\\xA0Add\"))\n    })));\n  })))));\n}\n\nvar IntegrationPage = function IntegrationPage() {\n  var _useQuery = useQuery(GET_INTEGRATIONS, {\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  if (!data) return null;\n  var _data$integration = data.integration,\n      title = _data$integration.title,\n      shortDescription = _data$integration.shortDescription,\n      banner = _data$integration.banner,\n      apps = _data$integration.apps;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, title, \" \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst integrations page\"\n  })), __jsx(PageTitle, {\n    title: title,\n    subtitle: shortDescription\n  }), __jsx(Container, null, __jsx(Carousel, {\n    options: {\n      direction: direction,\n      autoplay: 5000\n    },\n    bullets: true,\n    numberOfBullets: banner.length,\n    carouselSelector: \"gallery\",\n    className: \"application\",\n    controls: false\n  }, banner.map(function (item, index) {\n    return __jsx(Slide, {\n      key: \"gallery-key\".concat(index)\n    }, __jsx(\"img\", {\n      src: item,\n      alt: \"banner \".concat(index)\n    }));\n  })), __jsx(Integrations, {\n    data: apps,\n    loading: loading\n  })));\n};\n\nexport default withApollo(IntegrationPage);","map":null,"metadata":{},"sourceType":"module"}