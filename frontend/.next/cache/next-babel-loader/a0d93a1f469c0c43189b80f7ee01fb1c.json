{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { styled } from 'baseui';\nconst Wrapper = styled('div', ({\n  $theme\n}) => ({\n  backgroundColor: $theme.colors.primaryB,\n  boxShadow: $theme.lighting.shadow400\n}));\nexport const Content = styled('div', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: $theme.sizing.scale700\n}));\nexport const Icon = styled('div', props => ({\n  width: '50px',\n  height: '50px',\n  borderRadius: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: props.$color ? props.$color : '#FF0080'\n}));\nexport const Info = styled('div', {\n  width: 'calc(100% - 68px)'\n});\nexport const Title = styled('h4', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font450), {}, {\n  color: $theme.colors.primaryA,\n  marginBottom: $theme.sizing.scale0\n}));\nexport const Action = styled('div', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: `18px 20px 17px`,\n  borderTop: `1px dashed ${$theme.colors.borderOpaque}`\n}));\nexport const Button = styled('button', props => _objectSpread(_objectSpread({\n  color: props.$color ? props.$color : '#FF0080',\n  border: 0,\n  boxShadow: 'none',\n  cursor: 'pointer',\n  backgroundColor: 'transparent'\n}, props.$theme.typography.font200), {}, {\n  transition: 'all 0.3s ease',\n  ':hover': {\n    opacity: '0.7'\n  },\n  ':focus': {\n    outline: 'none'\n  }\n}));\nexport const Label = styled('span', ({\n  $theme\n}) => _objectSpread({\n  color: $theme.colors.contentSecondary\n}, $theme.typography.font200));\nexport default Wrapper;","map":null,"metadata":{},"sourceType":"module"}