{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\n/**\n * fake Todo data generator\n */\nvar initial = Array.from({\n  length: 5\n}, function (v, k) {\n  return k;\n}).map(function (k) {\n  var custom = {\n    id: \"id-\".concat(k),\n    content: \"Make a short list for invision\",\n    status: 'pending' // \"done\" or \"pending\"\n\n  };\n  return custom;\n});\nexport var TodoContext = React.createContext({});\n\nvar TodoProvider = function TodoProvider(props) {\n  var _useState = useState(initial),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var addTodo = function addTodo(value) {\n    var newTodo = {\n      id: \"id-\".concat(Date.now()),\n      content: \"\".concat(value),\n      status: 'pending'\n    };\n    todos.push(newTodo);\n    setTodos(_toConsumableArray(todos)); // have to use this way [...todos]\n  };\n\n  var updateTodo = function updateTodo(todoItem) {\n    var index = todos.findIndex(function (todo) {\n      return todo.id === todoItem.id;\n    });\n    todos[index] = todoItem;\n    setTodos(_toConsumableArray(todos));\n  };\n\n  var removeTodo = function removeTodo(todoId) {\n    var index = todos.findIndex(function (todo) {\n      return todo.id === todoId;\n    });\n    todos.splice(index, 1);\n    setTodos(_toConsumableArray(todos));\n  };\n\n  return __jsx(TodoContext.Provider, {\n    value: {\n      todos: todos,\n      setTodos: setTodos,\n      addTodo: addTodo,\n      updateTodo: updateTodo,\n      removeTodo: removeTodo\n    }\n  }, props.children);\n};\n\nexport default TodoProvider;","map":null,"metadata":{},"sourceType":"module"}