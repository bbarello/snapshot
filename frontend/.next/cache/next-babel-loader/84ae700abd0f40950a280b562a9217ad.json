{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { styled } from 'baseui';\nconst Wrapper = styled('div', ({\n  $theme\n}) => ({\n  padding: `${$theme.sizing.scale1000} 0 0`,\n  position: 'relative',\n  margin: '0 -15px',\n  '@media only screen and (max-width: 480px)': {\n    paddingTop: $theme.sizing.scale800\n  }\n}));\nexport const PrevButton = styled('button', ({\n  $theme\n}) => ({\n  border: 0,\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  top: 'calc(50% - 18px)',\n  right: 'calc(100% + 15px)',\n  left: 'auto',\n  zIndex: 1,\n  color: $theme.colors.primaryB,\n  fontSize: '36px',\n  padding: '0',\n  lineHeight: '1',\n  cursor: 'pointer',\n  ':hover': {\n    outline: 0\n  },\n  ':focus': {\n    outline: 0\n  },\n  '@media only screen and (max-width: 767px)': {\n    right: '100%'\n  },\n  '@media only screen and (max-width: 480px)': {\n    display: 'none'\n  }\n}));\nexport const NextButton = styled('button', ({\n  $theme\n}) => ({\n  border: 0,\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  top: 'calc(50% - 18px)',\n  left: 'calc(100% + 15px)',\n  right: 'auto',\n  zIndex: 1,\n  color: $theme.colors.primaryB,\n  fontSize: '36px',\n  padding: '0',\n  lineHeight: '1',\n  cursor: 'pointer',\n  ':hover': {\n    outline: 0\n  },\n  ':focus': {\n    outline: 0\n  },\n  '@media only screen and (max-width: 767px)': {\n    left: '100%'\n  },\n  '@media only screen and (max-width: 480px)': {\n    display: 'none'\n  }\n}));\nexport const ContentWrapper = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'hidden',\n  '@media only screen and (max-width: 1135px)': {\n    height: '480px'\n  }\n});\nexport const Media = styled('div', {\n  width: 'calc(100% - 335px)',\n  '@media only screen and (max-width: 1135px)': {\n    width: '100%',\n    height: 'calc(100% - 172px)',\n    marginTop: '69px',\n    pointerEvents: 'all'\n  }\n});\nexport const Image = styled('img', {\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover'\n});\nexport const Content = styled('article', ({\n  $theme\n}) => ({\n  width: '334px',\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '450px',\n  borderLeft: `1px solid ${$theme.colors.backgroundTertiary}`,\n  overflow: 'hidden',\n  '@media only screen and (max-width: 1135px)': {\n    width: '100%',\n    justifyContent: 'space-between',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    pointerEvents: 'none',\n    borderLeft: 0\n  }\n}));\nexport const Header = styled('header', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: $theme.sizing.scale600,\n  backgroundColor: $theme.colors.primaryB,\n  borderBottom: `1px solid ${$theme.colors.backgroundTertiary}`,\n  '@media only screen and (max-width: 1135px)': {\n    pointerEvents: 'all'\n  }\n}));\nexport const AvatarWrapper = styled('div', {\n  display: 'flex',\n  alignItems: 'center'\n});\nexport const Name = styled('h4', ({\n  $theme\n}) => _objectSpread(_objectSpread({\n  paddingLeft: $theme.sizing.scale600,\n  paddingRight: $theme.sizing.scale600\n}, $theme.typography.font250), {}, {\n  color: $theme.colors.primaryA,\n  fontWeight: 700\n}));\nexport const Dot = styled('span', ({\n  $theme\n}) => ({\n  fontWeight: 700,\n  color: $theme.colors.primaryA,\n  fontFamily: 'monospace'\n}));\nexport const FollowButton = styled('button', ({\n  $theme\n}) => _objectSpread(_objectSpread({\n  border: 0,\n  cursor: 'pointer',\n  backgroundColor: 'transparent',\n  color: $theme.colors.accent\n}, $theme.typography.font250), {}, {\n  fontWeight: 700,\n  paddingLeft: $theme.sizing.scale600,\n  paddingRight: $theme.sizing.scale600,\n  transition: 'all 0.3s ease',\n  ':hover': {\n    opacity: 0.85\n  },\n  ':focus': {\n    outline: 'none'\n  }\n}));\nexport const MoreButton = styled('button', ({\n  $theme\n}) => _objectSpread(_objectSpread({\n  border: 0,\n  cursor: 'pointer',\n  backgroundColor: 'transparent',\n  display: 'inline-flex'\n}, $theme.typography.font550), {}, {\n  color: $theme.colors.primaryA,\n  transition: 'all 0.3s ease',\n  ':hover': {\n    color: $theme.colors.accent\n  },\n  ':focus': {\n    outline: 'none'\n  }\n}));\nexport const Body = styled('main', ({\n  $theme\n}) => ({\n  flex: '1 0 auto',\n  overflowX: 'hidden',\n  position: 'relative',\n  marginRight: `-${$theme.sizing.scale600}`,\n  padding: `${$theme.sizing.scale200} ${$theme.sizing.scale600}`,\n  '@media only screen and (max-width: 1135px)': {\n    display: 'none',\n    visibility: 'hidden'\n  }\n}));\nexport const Video = styled('div', ({\n  $theme\n}) => ({\n  position: 'relative',\n  backgroundColor: $theme.colors.primary,\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center'\n}));\nexport const CommentWrapper = styled('div', ({\n  $theme\n}) => ({\n  width: '100%',\n  height: '100%',\n  overflowY: 'scroll',\n  paddingBottom: $theme.sizing.scale600,\n  boxSizing: 'border-box',\n  position: 'absolute',\n  paddingRight: $theme.sizing.scale600\n}));\nexport const CommentCard = styled('div', ({\n  $theme\n}) => ({\n  display: 'flex',\n  paddingTop: $theme.sizing.scale600,\n  alignItems: 'flex-start'\n}));\nexport const CommentInfo = styled('div', ({\n  $theme\n}) => ({\n  width: 'calc(100% - 48px)',\n  padding: `0 ${$theme.sizing.scale600}`,\n  color: $theme.colors.borderInverseOpaque,\n  '@media only screen and (max-width: 1135px)': {\n    padding: `0 ${$theme.sizing.scale400}`\n  }\n}));\nexport const CommentAuthor = styled('h3', ({\n  $theme\n}) => _objectSpread(_objectSpread({\n  display: 'inline-flex',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, $theme.typography.font200), {}, {\n  fontWeight: 600,\n  marginRight: $theme.sizing.scale200\n}));\nexport const CommentContent = styled('span', ({\n  $theme\n}) => ({\n  color: $theme.colors.borderInverseOpaque,\n  marginLeft: $theme.sizing.scale200\n}));\nexport const CommentTime = styled('div', ({\n  $theme\n}) => ({\n  color: $theme.colors.contentTertiary,\n  marginTop: $theme.sizing.scale400\n}));\nexport const Button = styled('button', ({\n  $theme\n}) => ({\n  border: 0,\n  padding: 0,\n  marginLeft: $theme.sizing.scale600,\n  cursor: 'pointer',\n  fontWeight: 600,\n  fontSize: $theme.sizing.scale500,\n  color: $theme.colors.primaryA,\n  backgroundColor: 'transparent',\n  ':hover': {\n    outline: 0\n  },\n  ':focus': {\n    outline: 0\n  }\n}));\nexport const Footer = styled('footer', ({\n  $theme\n}) => ({\n  padding: `${$theme.sizing.scale200} ${$theme.sizing.scale300}`,\n  borderTop: `1px solid ${$theme.colors.backgroundTertiary}`,\n  backgroundColor: $theme.colors.primaryB,\n  '@media only screen and (max-width: 1135px)': {\n    pointerEvents: 'all'\n  }\n}));\nexport const SocialList = styled('ul', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  paddingTop: $theme.sizing.scale500,\n  paddingBottom: $theme.sizing.scale400\n}));\nexport const ListItem = styled('li', ({\n  $theme\n}) => _objectSpread(_objectSpread({\n  display: 'inline-flex',\n  listStyle: 'none',\n  margin: `0 ${$theme.sizing.scale200}`\n}, $theme.typography.font550), {}, {\n  color: $theme.colors.primaryA,\n  ':last-child': {\n    marginLeft: 'auto'\n  }\n}));\nexport const ActivityInfo = styled('div', ({\n  $theme\n}) => ({\n  padding: `${$theme.sizing.scale200} ${$theme.sizing.scale300} ${$theme.sizing.scale400}`\n}));\nexport const NumberOFLike = styled('h5', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font250), {}, {\n  color: $theme.colors.primaryA,\n  fontWeight: 600\n}));\nexport const PostTime = styled('time', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font100), {}, {\n  color: $theme.colors.contentTertiary\n}));\nexport default Wrapper;","map":null,"metadata":{},"sourceType":"module"}