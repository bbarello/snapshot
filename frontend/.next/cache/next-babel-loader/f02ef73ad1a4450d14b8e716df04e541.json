{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport Fade from 'react-reveal/Fade';\nimport { FiPlus, FiCheck } from 'react-icons/fi';\nimport { Row, Col } from 'react-flexbox-grid/dist/react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Container from 'components/UiElements/Container/Container';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport Carousel, { Slide } from 'components/UiElements/Carousel/Carousel';\nimport ListGridCard from 'components/UiElements/ListGridCard/ListGridCard';\nimport IntegrationsMenu from 'components/SideMenu/IntegrationsMenu';\nimport useDirection from 'utils/useDirection';\nimport { useQuery, gql } from '@apollo/client';\nimport { withApollo } from 'apollo/client';\nconst GET_INTEGRATIONS = gql`\n  query {\n    integration {\n      id\n      title\n      shortDescription\n      banner\n\n      apps {\n        id\n        type\n        image\n        isInstalled\n        description\n      }\n    }\n  }\n`;\n\nfunction Integrations({\n  data,\n  loading\n}) {\n  const {\n    0: visibleApps,\n    1: setApps\n  } = useState(data);\n  const {\n    0: install,\n    1: setInstall\n  } = useState('');\n\n  function onFilter(selectedItem) {\n    if (selectedItem !== 'all') {\n      const items = data.filter(item => item.type.includes(selectedItem));\n      setApps(items);\n    } else {\n      setApps(data);\n    }\n  }\n\n  return __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px']\n  }, __jsx(Row, null, __jsx(Col, {\n    lg: 3\n  }, __jsx(IntegrationsMenu, {\n    onClick: onFilter\n  })), __jsx(Col, {\n    lg: 9\n  }, __jsx(Row, null, visibleApps.map(item => __jsx(Col, {\n    md: 6,\n    xl: 4,\n    key: `integration-app--key${item.id}`\n  }, __jsx(Fade, null, __jsx(ListGridCard, {\n    style: {\n      padding: '20px 25px 22px',\n      boxShadow: '0 1px 4px hsla(0, 0%, 0%, 0.16)',\n      marginTop: '20px'\n    },\n    variant: \"grid\",\n    thumb: item.image,\n    thumbHeight: \"60px\",\n    title: item.title,\n    description: item.description,\n    btn: __jsx(Button, {\n      kind: \"secondary\",\n      size: \"compact\",\n      shape: \"pill\",\n      isLoading: item.id === install && loading // onClick={() => handleAppInstallation(item.id)}\n      ,\n      overrides: {\n        BaseButton: {\n          style: () => {\n            return {\n              fontSize: '14px',\n              paddingLeft: '14px',\n              paddingRight: '14px',\n              color: item.isInstalled ? '#36AF00' : '#000000'\n            };\n          }\n        }\n      }\n    }, item.isInstalled ? __jsx(React.Fragment, null, __jsx(FiCheck, null), \"\\xA0Installed\") : __jsx(React.Fragment, null, __jsx(FiPlus, null), \"\\xA0Add\"))\n  }))))))));\n}\n\nconst IntegrationPage = () => {\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(GET_INTEGRATIONS, {\n    notifyOnNetworkStatusChange: true\n  });\n  const [direction] = useDirection();\n  if (!data) return null;\n  const {\n    title,\n    shortDescription,\n    banner,\n    apps\n  } = data.integration;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, title, \" \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst integrations page\"\n  })), __jsx(PageTitle, {\n    title: title,\n    subtitle: shortDescription\n  }), __jsx(Container, null, __jsx(Carousel, {\n    options: {\n      direction,\n      autoplay: 5000\n    },\n    bullets: true,\n    numberOfBullets: banner.length,\n    carouselSelector: \"gallery\",\n    className: \"application\",\n    controls: false\n  }, banner.map((item, index) => __jsx(Slide, {\n    key: `gallery-key${index}`\n  }, __jsx(\"img\", {\n    src: item,\n    alt: `banner ${index}`\n  })))), __jsx(Integrations, {\n    data: apps,\n    loading: loading\n  })));\n};\n\nexport default withApollo(IntegrationPage);","map":null,"metadata":{},"sourceType":"module"}