{"ast":null,"code":"var _jsxFileName = \"/Users/bryanbarello/snapshot/frontend/pages/pricing.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Block } from 'baseui/block';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport Container from 'components/UiElements/Container/Container';\nimport PricingCard from 'components/UiElements/PricingCard/PricingCard';\nimport pricingPageData from '../data/pricingPage';\n\nconst Pricing = () => {\n  const {\n    title,\n    subtitle,\n    plans\n  } = pricingPageData;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: pricingPlan,\n    1: setPricingPlan\n  } = useState('Free');\n\n  const handlePricingPlan = type => {\n    setLoading(true);\n    setPricingPlan(type);\n    setTimeout(() => {\n      setLoading(false);\n    }, 600);\n    console.log('Selected plan', pricingPlan);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, title, \" \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst pricing plan page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  })), __jsx(PageTitle, {\n    title: title,\n    subtitle: subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, __jsx(Block, {\n    marginLeft: \"-11px\",\n    marginRight: \"-11px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 22,\n    gridMargins: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, plans.map(plan => __jsx(Cell, {\n    span: [12, 6, 4],\n    key: `pricing-plan--key${plan.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, __jsx(PricingCard, {\n    title: plan.title,\n    type: plan.type,\n    items: plan.items,\n    price: plan.price,\n    btn: plan.btnText,\n    isLoading: loading && pricingPlan === plan.type,\n    onClick: () => handlePricingPlan(plan.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })))))));\n};\n\nexport default Pricing;","map":{"version":3,"sources":["/Users/bryanbarello/snapshot/frontend/pages/pricing.tsx"],"names":["React","useState","Head","Block","Grid","Cell","PageTitle","Container","PricingCard","pricingPageData","Pricing","title","subtitle","plans","loading","setLoading","pricingPlan","setPricingPlan","handlePricingPlan","type","setTimeout","console","log","map","plan","id","items","price","btnText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AAEA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,MAAMC,OAAqB,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA6BJ,eAAnC;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACe,WAAD;AAAA,OAAcC;AAAd,MAAgChB,QAAQ,CAAC,MAAD,CAA9C;;AAEA,QAAMiB,iBAAiB,GAAIC,IAAD,IAAkB;AAC3CJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,cAAc,CAACE,IAAD,CAAd;AAEAC,IAAAA,UAAU,CAAC,MAAM;AAChBL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAFS,EAEP,GAFO,CAAV;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,WAA7B;AACA,GATD;;AAWA,SACC,4BACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,MADD,EAEC;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAMC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAyB,IAAA,QAAQ,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAQC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,UAAU,EAAC,OAAlB;AAA0B,IAAA,WAAW,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,WAAW,EAAE,EAAnB;AAAuB,IAAA,WAAW,EAAE,EAApC;AAAwC,IAAA,WAAW,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACU,GAAN,CAAWC,IAAD,IACV,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAZ;AAAwB,IAAA,GAAG,EAAG,oBAAmBA,IAAI,CAACC,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AACC,IAAA,KAAK,EAAED,IAAI,CAACb,KADb;AAEC,IAAA,IAAI,EAAEa,IAAI,CAACL,IAFZ;AAGC,IAAA,KAAK,EAAEK,IAAI,CAACE,KAHb;AAIC,IAAA,KAAK,EAAEF,IAAI,CAACG,KAJb;AAKC,IAAA,GAAG,EAAEH,IAAI,CAACI,OALX;AAMC,IAAA,SAAS,EAAEd,OAAO,IAAIE,WAAW,KAAKQ,IAAI,CAACL,IAN5C;AAOC,IAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACM,IAAI,CAACL,IAAN,CAPjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADA,CADF,CADD,CADD,CARD,CADD;AA8BA,CA9CD;;AAgDA,eAAeT,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { Block } from 'baseui/block';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport Container from 'components/UiElements/Container/Container';\nimport PricingCard from 'components/UiElements/PricingCard/PricingCard';\n\nimport pricingPageData from '../data/pricingPage';\n\nconst Pricing: NextPage<{}> = () => {\n\tconst { title, subtitle, plans } = pricingPageData;\n\tconst [loading, setLoading] = useState(false);\n\tconst [pricingPlan, setPricingPlan] = useState('Free');\n\n\tconst handlePricingPlan = (type: string) => {\n\t\tsetLoading(true);\n\t\tsetPricingPlan(type);\n\n\t\tsetTimeout(() => {\n\t\t\tsetLoading(false);\n\t\t}, 600);\n\n\t\tconsole.log('Selected plan', pricingPlan);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{title} </title>\n\t\t\t\t<meta name=\"Description\" content=\"Inst pricing plan page\" />\n\t\t\t</Head>\n\n\t\t\t<PageTitle title={title} subtitle={subtitle} />\n\n\t\t\t<Container>\n\t\t\t\t<Block marginLeft=\"-11px\" marginRight=\"-11px\">\n\t\t\t\t\t<Grid gridColumns={12} gridGutters={22} gridMargins={0}>\n\t\t\t\t\t\t{plans.map((plan) => (\n\t\t\t\t\t\t\t<Cell span={[12, 6, 4]} key={`pricing-plan--key${plan.id}`}>\n\t\t\t\t\t\t\t\t<PricingCard\n\t\t\t\t\t\t\t\t\ttitle={plan.title}\n\t\t\t\t\t\t\t\t\ttype={plan.type}\n\t\t\t\t\t\t\t\t\titems={plan.items}\n\t\t\t\t\t\t\t\t\tprice={plan.price}\n\t\t\t\t\t\t\t\t\tbtn={plan.btnText}\n\t\t\t\t\t\t\t\t\tisLoading={loading && pricingPlan === plan.type}\n\t\t\t\t\t\t\t\t\tonClick={() => handlePricingPlan(plan.type)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Block>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default Pricing;\n"]},"metadata":{},"sourceType":"module"}