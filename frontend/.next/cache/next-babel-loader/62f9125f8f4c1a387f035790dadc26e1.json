{"ast":null,"code":"var _jsxFileName = \"/Users/bryanbarello/snapshot/frontend/pages/_document.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { styletron } from 'styletron';\nimport favicon from 'assets/images/favicon.png';\nexport default class CustomDocument extends Document {\n  static async getInitialProps(ctx) {\n    const page = await ctx.renderPage(App => props => __jsx(StyletronProvider, {\n      value: styletron,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, __jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }))));\n    const stylesheets = styletron.getStylesheets() || [];\n    return _objectSpread(_objectSpread({}, page), {}, {\n      stylesheets\n    });\n  }\n\n  render() {\n    return __jsx(Html, {\n      lang: \"en-US\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"Description\",\n      content: \"Inst is a GraphQL based server side dashboard template\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      href: favicon,\n      type: \"image/png\",\n      sizes: \"16x16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), this.props.stylesheets.map((sheet, i) => __jsx(\"style\", {\n      className: \"_styletron_hydrate_\",\n      dangerouslySetInnerHTML: {\n        __html: sheet.css\n      },\n      media: sheet.attrs.media,\n      \"data-hydrate\": sheet.attrs['data-hydrate'],\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }))), __jsx(\"body\", {\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/bryanbarello/snapshot/frontend/pages/_document.tsx"],"names":["Document","Html","Head","Main","NextScript","Provider","StyletronProvider","styletron","favicon","CustomDocument","getInitialProps","ctx","page","renderPage","App","props","stylesheets","getStylesheets","render","map","sheet","i","__html","css","attrs","media"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,IACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,eANP;AAOA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,iBAA9C;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,eAAe,MAAMC,cAAN,SAA6BT,QAA7B,CAA2C;AACxD,eAAaU,eAAb,CAA6BC,GAA7B,EAAmD;AACjD,UAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,UAAJ,CAAgBC,GAAD,IAAUC,KAAD,IACzC,MAAC,iBAAD;AAAmB,MAAA,KAAK,EAAER,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD,eAASQ,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADiB,CAAnB;AAKA,UAAMC,WAAW,GAAIT,SAAD,CAAmBU,cAAnB,MAAuC,EAA3D;AACA,2CAAYL,IAAZ;AAAkBI,MAAAA;AAAlB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,OAAO,EAAC,wDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAEV,OAAvB;AAAgC,MAAA,IAAI,EAAC,WAArC;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOG,KAAKO,KAAL,CAAWC,WAAX,CAAuBG,GAAvB,CAA2B,CAACC,KAAD,EAAQC,CAAR,KAC1B;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEF,KAAK,CAACG;AAAhB,OAF3B;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAAN,CAAYC,KAHrB;AAIE,sBAAcL,KAAK,CAACI,KAAN,CAAY,cAAZ,CAJhB;AAKE,MAAA,GAAG,EAAEH,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPH,CADF,EAkBE;AAAM,MAAA,GAAG,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,CADF;AAyBD;;AArCuD","sourcesContent":["import Document, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  DocumentContext,\n} from 'next/document';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { styletron } from 'styletron';\nimport favicon from 'assets/images/favicon.png';\nexport default class CustomDocument extends Document<any> {\n  static async getInitialProps(ctx: DocumentContext) {\n    const page = await ctx.renderPage((App) => (props) => (\n      <StyletronProvider value={styletron}>\n        <App {...props} />\n      </StyletronProvider>\n    ));\n    const stylesheets = (styletron as any).getStylesheets() || [];\n    return { ...page, stylesheets };\n  }\n\n  render() {\n    return (\n      <Html lang=\"en-US\">\n        <Head>\n          <meta name=\"theme-color\" content=\"#000000\" />\n          <meta\n            name=\"Description\"\n            content=\"Inst is a GraphQL based server side dashboard template\"\n          />\n          <link rel=\"icon\" href={favicon} type=\"image/png\" sizes=\"16x16\" />\n          {this.props.stylesheets.map((sheet, i) => (\n            <style\n              className=\"_styletron_hydrate_\"\n              dangerouslySetInnerHTML={{ __html: sheet.css }}\n              media={sheet.attrs.media}\n              data-hydrate={sheet.attrs['data-hydrate']}\n              key={i}\n            />\n          ))}\n        </Head>\n        <body dir=\"ltr\">\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}