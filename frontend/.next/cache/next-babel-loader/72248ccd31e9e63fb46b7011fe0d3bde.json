{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { Select } from 'baseui/select';\nimport Container from 'components/UiElements/Container/Container';\nimport SettingsMenu from 'components/SideMenu/SettingsMenu';\nimport ListGridCard from 'components/UiElements/ListGridCard/ListGridCard';\nimport { Title, Subtitle, SpaceBetween } from '../../components/PageStyles/Settings.styled';\nimport applicationsPageData from '../../data/applicationsPage';\nconst sortOptions = [{\n  label: 'Sort by A',\n  value: 'a'\n}, {\n  label: 'Sort by B',\n  value: 'b'\n}, {\n  label: 'Sort by C',\n  value: 'c'\n}];\n\nconst Applications = () => {\n  const {\n    title,\n    subtitle,\n    applications\n  } = applicationsPageData;\n  const {\n    0: value,\n    1: setValue\n  } = useState([]);\n\n  const handleSort = e => {\n    setValue(e.value);\n  };\n\n  const handleRemoveAll = () => {\n    console.log('Remove all');\n  };\n\n  const handleRemoveApplication = id => {\n    console.log('Remove', id);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, title, \" \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst applications setting page\"\n  })), __jsx(Container, null, __jsx(Block, {\n    paddingTop: ['0', '0', '0', '40px']\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 0,\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 12, 3]\n  }, __jsx(SettingsMenu, null)), __jsx(Cell, {\n    span: [12, 12, 9]\n  }, __jsx(Block, {\n    paddingTop: ['10px', '15px', '30px', '0']\n  }, __jsx(Title, null, title), __jsx(Subtitle, null, subtitle), __jsx(SpaceBetween, null, __jsx(Select, {\n    options: sortOptions,\n    value: value,\n    placeholder: \"Sort\",\n    onChange: handleSort,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            width: '100px'\n          };\n        }\n      },\n      ControlContainer: {\n        style: () => {\n          return {\n            borderWidth: 0,\n            borderTopLeftRadius: '30px',\n            borderTopRightRadius: '30px',\n            borderBottomRightRadius: '30px',\n            borderBottomLeftRadius: '30px',\n            backgroundColor: 'transparent'\n          };\n        }\n      },\n      ValueContainer: {\n        style: () => {\n          return {\n            paddingLeft: 0\n          };\n        }\n      }\n    }\n  }), __jsx(Button, {\n    onClick: handleRemoveAll,\n    kind: \"secondary\",\n    shape: \"pill\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font250), {}, {\n            minWidth: '101px'\n          });\n        }\n      }\n    }\n  }, \"Remove all\")), applications.map(item => __jsx(SpaceBetween, {\n    key: `application-key${item.id}`\n  }, __jsx(ListGridCard, {\n    variant: \"list\",\n    thumb: item.thumb,\n    title: item.title,\n    description: item.description,\n    author: item.author,\n    authorUrl: item.authorUrl\n  }), __jsx(Button, {\n    onClick: () => handleRemoveApplication(item.id),\n    kind: \"secondary\",\n    shape: \"pill\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread(_objectSpread({}, $theme.typography.font250), {}, {\n            minWidth: '82px'\n          });\n        }\n      }\n    }\n  }, \"Remove\")))))))));\n};\n\nexport default Applications;","map":null,"metadata":{},"sourceType":"module"}