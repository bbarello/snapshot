{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-flexbox-grid/dist/react-flexbox-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Header, Title, ButtonGroup } from '../../components/PageStyles/Checkout.styled';\n\nconst Address = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    phone: '',\n    address: '',\n    city: '',\n    zipCode: '',\n    area: ''\n  });\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleOnSubmit = () => {\n    console.log('Address form: ', state);\n  };\n\n  const handleResetForm = () => {\n    setState({\n      name: '',\n      phone: '',\n      address: '',\n      city: '',\n      zipCode: '',\n      area: ''\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    style: {\n      borderBottom: 0\n    }\n  }, __jsx(Title, null, \"Add Address\")), __jsx(Row, null, __jsx(Col, {\n    lg: 6\n  }, __jsx(FormControl, {\n    label: \"Your Name\"\n  }, __jsx(Input, {\n    onChange: handleOnChange,\n    name: \"name\",\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  }))), __jsx(Col, {\n    lg: 6\n  }, __jsx(FormControl, {\n    label: \"Phone Number\"\n  }, __jsx(Input, {\n    onChange: () => handleOnChange('phone'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })))), __jsx(Row, null, __jsx(Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Address\"\n  }, __jsx(Input, {\n    onChange: () => handleOnChange('address'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })))), __jsx(Row, null, __jsx(Col, {\n    lg: 6\n  }, __jsx(FormControl, {\n    label: \"City\"\n  }, __jsx(Input, {\n    onChange: () => handleOnChange('city'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  }))), __jsx(Col, {\n    lg: 6\n  }, __jsx(FormControl, {\n    label: \"Zip code\"\n  }, __jsx(Input, {\n    onChange: () => handleOnChange('zipCode'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })))), __jsx(Row, null, __jsx(Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Area\"\n  }, __jsx(Input, {\n    onChange: () => handleOnChange('area'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  })))), __jsx(ButtonGroup, null, __jsx(Button, {\n    onClick: handleOnSubmit,\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Save\"), __jsx(Button, {\n    onClick: handleResetForm,\n    kind: \"tertiary\",\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Cancel\")));\n};\n\nexport default Address;","map":null,"metadata":{},"sourceType":"module"}