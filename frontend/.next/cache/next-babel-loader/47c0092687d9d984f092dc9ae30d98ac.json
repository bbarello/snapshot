{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Avatar } from 'baseui/avatar';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { Button } from 'baseui/button';\nimport Container from '../components/UiElements/Container/Container';\nimport Posts from '../containers/Posts/Posts';\nimport { useQuery, gql } from '@apollo/client';\nimport { withApollo } from '../apollo/client';\nimport { PageTitle, InfoBar, UserAvatar, UserName, UserRole, Menu, MenuList, Strong, AlignItems, List, ListItem } from '../components/PageStyles/Profile.styled';\nimport { Block } from 'baseui/block';\nconst GET_PROFILE = gql`\n  query getProfile($id: String!) {\n    profile(id: $id) {\n      id\n      name\n      role\n      avatar\n      posts {\n        id\n        type\n        image\n        video\n        gallery\n        comments {\n          id\n          role\n          username\n          avatar\n          comment\n          createdAt\n        }\n      }\n      followers {\n        id\n        avatar\n        name\n      }\n      following {\n        id\n        avatar\n        name\n      }\n    }\n  }\n`;\n\nconst Profile = () => {\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(GET_PROFILE, {\n    variables: {\n      id: 'user_1'\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const {\n    0: active,\n    1: setActive\n  } = useState('posts');\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  if (!data) return null;\n  const {\n    name,\n    role,\n    avatar,\n    posts,\n    followers,\n    following\n  } = data.profile;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Profile \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst profile page\"\n  })), __jsx(PageTitle, null, __jsx(Container, null, __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          '@media only screen and (max-width: 667px)': {\n            textAlign: 'center'\n          }\n        }\n      }\n    }\n  }, __jsx(UserAvatar, {\n    src: avatar,\n    alt: name\n  })), __jsx(InfoBar, null, __jsx(Block, null, __jsx(UserName, null, name), __jsx(UserRole, null, role)), __jsx(Menu, {\n    className: \"profile-menu\"\n  }, __jsx(MenuList, {\n    className: active === 'posts' ? 'active' : '',\n    onClick: () => {\n      setActive('posts');\n    }\n  }, \"Posts \", __jsx(Strong, null, posts.length)), __jsx(MenuList, {\n    className: active === 'followers' ? 'active' : '',\n    onClick: () => {\n      setActive('followers');\n      setVisible(true);\n    }\n  }, \"Followers \", __jsx(Strong, null, followers.length)), __jsx(MenuList, {\n    className: active === 'following' ? 'active' : '',\n    onClick: () => {\n      setActive('following');\n      setVisible(true);\n    }\n  }, \"Following \", __jsx(Strong, null, following.length)))))), __jsx(Container, null, __jsx(Posts, {\n    data: posts,\n    avatar: avatar,\n    username: name\n  }), __jsx(Modal, {\n    onClose: () => {\n      setVisible(false);\n      setActive('posts');\n    },\n    closeable: true,\n    isOpen: visible,\n    animate: true,\n    size: \"default\",\n    role: \"dialog\",\n    unstable_ModalBackdropScroll: true,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            zIndex: 9999\n          };\n        }\n      }\n    }\n  }, active === 'followers' && __jsx(React.Fragment, null, __jsx(ModalHeader, null, \"Followers\"), __jsx(ModalBody, {\n    style: {\n      overflow: 'hidden'\n    }\n  }, followers.length > 0 ? __jsx(List, {\n    className: \"followers-list\"\n  }, followers.map(follower => __jsx(ListItem, {\n    key: `follower-key${follower.id}`\n  }, __jsx(AlignItems, null, __jsx(Avatar, {\n    name: follower.name,\n    size: \"scale1400\",\n    src: follower.avatar\n  }), __jsx(\"span\", {\n    style: {\n      margin: '0 10px'\n    }\n  }, follower.name)), __jsx(Button, {\n    size: \"compact\",\n    kind: \"secondary\",\n    shape: \"pill\",\n    onClick: () => console.log('Follow', follower.id)\n  }, \"Follow\")))) : '0 Followers')), active === 'following' && __jsx(React.Fragment, null, __jsx(ModalHeader, null, \"Following\"), __jsx(ModalBody, {\n    style: {\n      overflow: 'hidden'\n    }\n  }, following.length > 0 ? __jsx(List, {\n    className: \"followers-list\"\n  }, following.map(follower => __jsx(ListItem, {\n    key: `following-key${follower.id}`\n  }, __jsx(AlignItems, null, __jsx(Avatar, {\n    name: follower.name,\n    size: \"scale1400\",\n    src: follower.avatar\n  }), __jsx(\"span\", {\n    style: {\n      margin: '0 10px'\n    }\n  }, follower.name)), __jsx(Button, {\n    size: \"compact\",\n    kind: \"secondary\",\n    shape: \"pill\",\n    onClick: () => console.log('Unfollow', follower.id)\n  }, \"Unfollow\")))) : '0 Following')))));\n};\n\nexport default withApollo(Profile);","map":null,"metadata":{},"sourceType":"module"}