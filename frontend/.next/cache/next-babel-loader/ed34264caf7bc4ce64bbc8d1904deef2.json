{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\OneDrive\\\\Documents\\\\Apple\\\\snapshot\\\\frontend\\\\components\\\\UiElements\\\\Sites\\\\Sites.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Wrapper, { Content, Icon, Info, Title, Action, Button, Label } from './Sites.styled';\n\nconst Sites = ({\n  icon,\n  color,\n  description,\n  title,\n  btntext,\n  label,\n  onClick,\n  style\n}) => {\n  return __jsx(Wrapper, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, icon && __jsx(Icon, {\n    $color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }, icon), __jsx(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, description), __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, title))), btntext || label ? __jsx(Action, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    $color: color,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, btntext), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, label)) : '');\n};\n\nexport default Sites;","map":{"version":3,"sources":["C:/Users/bryan/OneDrive/Documents/Apple/snapshot/frontend/components/UiElements/Sites/Sites.tsx"],"names":["React","Wrapper","Content","Icon","Info","Title","Action","Button","Label","Sites","icon","color","description","title","btntext","label","onClick","style"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,IACEC,OADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,KAPF,QAQO,gBARP;;AAqBA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,IADa;AAEbC,EAAAA,KAFa;AAGbC,EAAAA,WAHa;AAIbC,EAAAA,KAJa;AAKbC,EAAAA,OALa;AAMbC,EAAAA,KANa;AAObC,EAAAA,OAPa;AAQbC,EAAAA;AARa,CAAD,KASG;AACf,SACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,IAAI,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,IAAtB,CADX,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQE,WAAR,CADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,KAAR,CAFF,CAFF,CADF,EAQGC,OAAO,IAAIC,KAAX,GACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEJ,KAAhB;AAAuB,IAAA,OAAO,EAAEK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OADH,CADF,EAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,KAAR,CAJF,CADD,GAQC,EAhBJ,CADF;AAqBD,CA/BD;;AAiCA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport Wrapper, {\n  Content,\n  Icon,\n  Info,\n  Title,\n  Action,\n  Button,\n  Label,\n} from './Sites.styled';\n\ntype SitesType = {\n  icon?: React.ReactNode;\n  color?: string;\n  description?: string;\n  title?: string;\n  btntext?: string;\n  label?: string;\n  onClick?: () => void;\n  style?: React.CSSProperties;\n};\n\nconst Sites = ({\n  icon,\n  color,\n  description,\n  title,\n  btntext,\n  label,\n  onClick,\n  style,\n}: SitesType) => {\n  return (\n    <Wrapper style={style}>\n      <Content>\n        {icon && <Icon $color={color}>{icon}</Icon>}\n        <Info>\n          <Label>{description}</Label>\n          <Title>{title}</Title>\n        </Info>\n      </Content>\n      {btntext || label ? (\n        <Action>\n          <Button $color={color} onClick={onClick}>\n            {btntext}\n          </Button>\n          <Label>{label}</Label>\n        </Action>\n      ) : (\n        ''\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Sites;\n"]},"metadata":{},"sourceType":"module"}