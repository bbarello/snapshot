{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan\\\\OneDrive\\\\Documents\\\\Apple\\\\snapshot\\\\frontend\\\\pages\\\\_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron } from 'styletron';\nimport Layout from 'components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from 'contexts/theme/theme.provider';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { ApolloProvider } from '@apollo/client';\nimport { useApollo } from 'apollo/github.client'; // external css\n\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'assets/css/reset.css';\nimport 'react-flexbox-grid/dist/react-flexbox-grid.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport 'typeface-open-sans';\nexport default function CustomApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _React$useState = React.useState(THEME.light),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  React.useEffect(function () {\n    var SAVED_THEME = localStorage.getItem('theme');\n\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n\n    setTheme(SAVED_THEME);\n  }, []);\n  var apolloGithubClient = useApollo(pageProps.initialApolloState);\n  return __jsx(ApolloProvider, {\n    client: apolloGithubClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeSwitcherProvider, {\n    value: {\n      theme: theme,\n      setTheme: setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(StyletronProvider, {\n    value: styletron,\n    debugAfterHydration: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(BaseProvider, {\n    theme: theme === THEME.light ? _objectSpread(_objectSpread({}, LightTheme), {}, {\n      direction: 'ltr'\n    }) : _objectSpread(_objectSpread({}, DarkTheme), {}, {\n      direction: 'ltr'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(CartProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }))))))));\n}\n\n_s(CustomApp, \"wdTcRUVjqx+Poi0Nmu1srtIjkzc=\", false, function () {\n  return [useApollo];\n});\n\n_c = CustomApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomApp\");","map":{"version":3,"sources":["C:/Users/bryan/OneDrive/Documents/Apple/snapshot/frontend/pages/_app.tsx"],"names":["React","Provider","StyletronProvider","BaseProvider","LightTheme","DarkTheme","styletron","Layout","ThemeSwitcherProvider","THEME","CartProvider","ApolloProvider","useApollo","CustomApp","Component","pageProps","useState","light","theme","setTheme","useEffect","SAVED_THEME","localStorage","getItem","apolloGithubClient","initialApolloState","direction"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,iBAA9C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAoD,QAApD;AACA,SAASC,SAAT,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,qBAAT,EAAgCC,KAAhC,QAA6C,+BAA7C;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,QAA0B,sBAA1B,C,CACA;;AACA,OAAO,4CAAP;AACA,OAAO,uCAAP;AACA,OAAO,mDAAP;AACA,OAAO,sBAAP;AACA,OAAO,gDAAP;AACA,OAAO,sDAAP;AACA,OAAO,oBAAP;AACA,eAAe,SAASC,SAAT,OAAuD;AAAA;;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;;AAAA,wBAC1Cf,KAAK,CAACgB,QAAN,CAAeP,KAAK,CAACQ,KAArB,CAD0C;AAAA;AAAA,MAC7DC,KAD6D;AAAA,MACtDC,QADsD;;AAEpEnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpB,QAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;;AACA,QAAIF,WAAW,KAAK,IAApB,EAA0B;AACxBA,MAAAA,WAAW,GAAGZ,KAAK,CAACQ,KAApB;AACD;;AACDE,IAAAA,QAAQ,CAACE,WAAD,CAAR;AACD,GAND,EAMG,EANH;AAOA,MAAMG,kBAAkB,GAAGZ,SAAS,CAACG,SAAS,CAACU,kBAAX,CAApC;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,qBAAD;AAAuB,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEb,SAA1B;AAAqC,IAAA,mBAAmB,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EACHY,KAAK,KAAKT,KAAK,CAACQ,KAAhB,mCACSb,UADT;AACqBsB,MAAAA,SAAS,EAAE;AADhC,yCAESrB,SAFT;AAEoBqB,MAAAA,SAAS,EAAE;AAF/B,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeX,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CAPF,CADF,CADF,CADF,CADF;AAqBD;;GAhCuBF,S;UASKD,S;;;KATLC,S","sourcesContent":["import React from 'react';\nimport { AppProps } from 'next/app';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron, debug } from 'styletron';\nimport Layout from 'components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from 'contexts/theme/theme.provider';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { ApolloProvider } from '@apollo/client';\nimport { useApollo } from 'apollo/github.client';\n// external css\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'assets/css/reset.css';\nimport 'react-flexbox-grid/dist/react-flexbox-grid.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport 'typeface-open-sans';\nexport default function CustomApp({ Component, pageProps }: AppProps) {\n  const [theme, setTheme] = React.useState(THEME.light);\n  React.useEffect(() => {\n    let SAVED_THEME = localStorage.getItem('theme');\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n    setTheme(SAVED_THEME);\n  }, []);\n  const apolloGithubClient = useApollo(pageProps.initialApolloState);\n\n  return (\n    <ApolloProvider client={apolloGithubClient}>\n      <ThemeSwitcherProvider value={{ theme, setTheme }}>\n        <StyletronProvider value={styletron} debugAfterHydration>\n          <BaseProvider\n            theme={\n              theme === THEME.light\n                ? { ...LightTheme, direction: 'ltr' }\n                : { ...DarkTheme, direction: 'ltr' }\n            }\n          >\n            <CartProvider>\n              <Layout>\n                <Component {...pageProps} />\n              </Layout>\n            </CartProvider>\n          </BaseProvider>\n        </StyletronProvider>\n      </ThemeSwitcherProvider>\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}