{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Grid, Cell } from 'baseui/layout-grid';\nimport { FaShoppingBag, FaMapMarkerAlt, FaMoneyCheckAlt } from 'react-icons/fa';\nimport { Button } from 'baseui/button';\nimport { Input } from 'baseui/input';\nimport { Block } from 'baseui/block';\nimport Container from 'components/UiElements/Container/Container';\nimport PageTitle from 'components/UiElements/PageTitle/PageTitle';\nimport Cart from '../../containers/Shop/Cart';\nimport Address from '../../containers/Shop/Address';\nimport Payment from '../../containers/Shop/Payment';\nimport { MenuStep, ListItem, Title, PriceList, PriceItem } from 'components/PageStyles/Checkout.styled';\nimport { useCartState } from '../../contexts/cart/cart.provider';\nimport { calcCartItemsTotal } from '../../contexts/cart/cart.utils';\nimport { THEME, useThemeSwitcherCtx } from '../../contexts/theme/theme.provider';\nconst TITLE = 'Checkout';\nconst SUB_TITLE = 'Inst checkout page';\n\nconst Checkout = () => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(1);\n  const cartItems = useCartState('cartItems');\n  const totalPrice = calcCartItemsTotal(cartItems);\n  const {\n    theme\n  } = useThemeSwitcherCtx();\n\n  const handleStep = () => {\n    setStep(step + 1);\n  };\n\n  let component;\n\n  switch (step) {\n    case 1:\n      component = __jsx(Cart, {\n        products: cartItems\n      });\n      break;\n\n    case 2:\n      component = __jsx(Address, null);\n      break;\n\n    case 3:\n      component = __jsx(Payment, null);\n      break;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, TITLE, \" \"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: SUB_TITLE\n  })), __jsx(PageTitle, {\n    title: TITLE,\n    subtitle: SUB_TITLE,\n    backdrop: false,\n    bgColor: theme === THEME.light ? '#ffffff' : '#000000'\n  }), __jsx(Container, null, __jsx(MenuStep, {\n    className: \"step-menu\"\n  }, __jsx(ListItem, {\n    className: step === 1 ? 'active' : '',\n    onClick: () => setStep(1)\n  }, __jsx(FaShoppingBag, null), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            paddingLeft: '5px',\n            paddingRight: '5px',\n            color: $theme.colors.primaryA\n          };\n        }\n      }\n    }\n  }, \"Bag\")), __jsx(ListItem, {\n    className: step === 2 ? 'active' : '',\n    onClick: () => setStep(2)\n  }, __jsx(FaMapMarkerAlt, null), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            paddingLeft: '5px',\n            paddingRight: '5px',\n            color: $theme.colors.primaryA\n          };\n        }\n      }\n    }\n  }, \"Address\")), __jsx(ListItem, {\n    className: step === 3 ? 'active' : '',\n    onClick: () => setStep(3)\n  }, __jsx(FaMoneyCheckAlt, null), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            paddingLeft: '5px',\n            paddingRight: '5px',\n            color: $theme.colors.primaryA\n          };\n        }\n      }\n    }\n  }, \"Payment\"))), __jsx(Block, {\n    marginLeft: [0, 0, 0, '-25px'],\n    marginRight: [0, 0, 0, '-25px']\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGaps: [40, 50, 0],\n    gridGutters: [0, 0, 50],\n    gridMargins: 0\n  }, __jsx(Cell, {\n    span: [12, 12, 8]\n  }, component), step !== 3 && __jsx(Cell, {\n    span: [12, 12, 4]\n  }, __jsx(Block, {\n    paddingTop: ['30px', '40px', '0']\n  }, __jsx(Title, null, \"Price Details\"), __jsx(Input, {\n    onChange: e => console.log(e.target.value),\n    placeholder: \"Enter coupon code\",\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    }\n  }), __jsx(PriceList, null, __jsx(PriceItem, null, __jsx(\"span\", null, \"Total Price\"), \" \", __jsx(\"span\", null, \"$ \", totalPrice)), __jsx(PriceItem, null, __jsx(\"span\", null, \"Price discount\"), \" \", __jsx(\"span\", null, \"$95\")), __jsx(PriceItem, null, __jsx(\"span\", null, \"Coupon Discount\"), \" \", __jsx(\"span\", null, \"$95\")), __jsx(PriceItem, null, __jsx(\"span\", null, \"Order Total\"), \" \", __jsx(\"span\", null, \"$95\")), __jsx(PriceItem, null, __jsx(\"span\", null, \"Delivery Charge\"), \" \", __jsx(\"span\", null, \"$95\"))), __jsx(Button, {\n    size: \"large\",\n    onClick: handleStep,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({\n            width: '100%'\n          }, $theme.typography.font250);\n        }\n      }\n    }\n  }, \"Next\")))))));\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}