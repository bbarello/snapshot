{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { styled } from 'baseui';\nconst Wrapper = styled('div', {\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'flex-start',\n  justifyContent: 'space-between'\n});\nexport const MediaWrapper = styled('div', {\n  width: '470px',\n  textAlign: 'center',\n  '@media only screen and (max-width: 1200px)': {\n    width: '400px'\n  },\n  '@media only screen and (max-width: 767px)': {\n    width: '100%'\n  }\n});\nexport const Image = styled('img', ({\n  $theme\n}) => ({\n  width: '100%',\n  height: 'auto',\n  objectFit: 'cover',\n  backgroundColor: $theme.colors.primaryB,\n  boxShadow: $theme.lighting.shadow500\n}));\nexport const ContentWrapper = styled('div', {\n  width: 'calc(100% - 518px)',\n  '@media only screen and (max-width: 1200px)': {\n    width: 'calc(100% - 440px)'\n  },\n  '@media only screen and (max-width: 767px)': {\n    width: '100%',\n    paddingTop: '40px'\n  }\n});\nexport const ProductTitle = styled('h3', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font850), {}, {\n  color: $theme.colors.primaryA,\n  marginBottom: $theme.sizing.scale500,\n  '@media only screen and (max-width: 767px)': _objectSpread({}, $theme.typography.font750),\n  '@media only screen and (max-width: 480px)': _objectSpread({}, $theme.typography.font650)\n}));\nexport const ProductPrice = styled('div', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font750), {}, {\n  color: $theme.colors.primaryA,\n  marginBottom: $theme.sizing.scale1400,\n  '@media only screen and (max-width: 767px)': _objectSpread(_objectSpread({}, $theme.typography.font650), {}, {\n    marginBottom: $theme.sizing.scale1000\n  }),\n  '@media only screen and (max-width: 480px)': _objectSpread({}, $theme.typography.font550)\n}));\nexport const List = styled('ul', ({\n  $theme\n}) => ({\n  margin: `${$theme.sizing.scale800} 0`\n}));\nexport const ListItem = styled('li', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font200), {}, {\n  color: $theme.colors.contentSecondary,\n  marginBottom: $theme.sizing.scale600,\n  display: 'flex',\n  alignItems: 'center'\n}));\nexport const ProductDescription = styled('p', ({\n  $theme\n}) => _objectSpread(_objectSpread({}, $theme.typography.font200), {}, {\n  color: $theme.colors.contentSecondary,\n  lineHeight: '26px',\n  marginBottom: $theme.sizing.scale900\n}));\nexport default Wrapper;","map":null,"metadata":{},"sourceType":"module"}