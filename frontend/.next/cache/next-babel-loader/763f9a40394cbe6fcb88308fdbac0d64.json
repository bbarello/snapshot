{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport Glide from '@glidejs/glide';\nimport Wrapper, { DefaultBtn, BulletButton } from './Carousel.styled';\n\nconst Carousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  bullets,\n  thumbs,\n  numberOfBullets,\n  carouselSelector\n}) => {\n  const addAllClasses = ['glide'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const totalBullets = [];\n\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  useEffect(() => {\n    const glide = new Glide(carouselSelector ? `#${carouselSelector}` : '#glide', _objectSpread({}, options));\n    glide.mount();\n  }, [options]);\n  return __jsx(Wrapper, {\n    className: addAllClasses.join(' '),\n    id: carouselSelector || 'glide'\n  }, __jsx(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\"\n  }, __jsx(\"ul\", {\n    className: \"glide__slides\"\n  }, children)), controls && __jsx(\"div\", {\n    className: \"glide__controls\",\n    \"data-glide-el\": \"controls\"\n  }, __jsx(\"div\", {\n    className: \"glide__prev--area\",\n    \"data-glide-dir\": \"<\"\n  }, prevButton ? prevButton : __jsx(DefaultBtn, null, \"Prev\")), __jsx(\"div\", {\n    className: \"glide__next--area\",\n    \"data-glide-dir\": \">\"\n  }, nextButton ? nextButton : __jsx(DefaultBtn, null, \"Next\"))), bullets && __jsx(\"div\", {\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\"\n  }, totalBullets.map(index => __jsx(BulletButton, {\n    key: index,\n    className: \"glide__bullet\",\n    \"data-glide-dir\": `=${index}`\n  }))), bullets !== true && thumbs && thumbs.length > 0 && __jsx(\"div\", {\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\"\n  }, thumbs.map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"glide__thumb\",\n    \"data-glide-dir\": `=${index}`\n  }, __jsx(\"img\", {\n    src: item.url,\n    alt: \"gallery\"\n  })))));\n};\n\nconst Slide = ({\n  children\n}) => {\n  return __jsx(Wrapper, {\n    className: \"glide__slide\"\n  }, children);\n};\n\nCarousel.defaultProps = {\n  controls: true,\n  bullets: false\n};\nexport { Slide };\nexport default Carousel;","map":null,"metadata":{},"sourceType":"module"}